com.app.jwtSecret= TtPassword1.
com.app.jwtExpirationMs= 72000000

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.show-sql=true
spring.datasource.url=jdbc:postgresql://localhost:5432/products
spring.datasource.username=postgres
spring.datasource.password=tarik54
spring.jpa.properties.javax.persistence.validation.mode = auto
spring.jpa.properties.erties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.mvc.pathmatch.matching-strategy = ANT_PATH_MATCHER
#spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

server.servlet.context-path=/

#Kafka Producer
spring.kafka.producer.bootstrap-servers=127.0.0.1:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.group-id=group_id
topic.name.producer=City

#Kafka Consumer
spring.kafka.consumer.bootstrap-servers=127.0.0.1:9092
spring.kafka.consumer.group-id=group_id
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
topic.name.consumer=City

# Topic name


# Common Kafka Properties
auto.create.topics.enable=true

# Redis Config
spring.redis.host=localhost
spring.redis.port=6379

